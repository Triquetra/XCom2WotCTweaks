[XComGame.X2AIBTBehaviorTree]

; ----------------------------------------------------------------------------------------------------------
; -------------------- MutonM2_LW (Commandant) --------------------------------------------------
; ----------------------------------------------------------------------------------------------------------
; "Select Attack if Ideal" includes grenade and melee attack if already in position

+Behaviors=(BehaviorName="MutonCenElite::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=MutonCenElite_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=MutonCenElite_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=MutonCenElite_RedAbilitySelector)
+Behaviors=(BehaviorName=MutonCenElite_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=MutonCenElite_RedFirstAction, Child[2]=MutonCenElite_RedLastAction)

+Behaviors=(BehaviorName=MutonCenElite_RedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=MutonCenElite_RedFirstActionSelector)
+Behaviors=(BehaviorName=MutonCenElite_RedFirstActionSelector, NodeType=Selector, \\
	Child[0]=TryBloodCallOnMultipleTargets, \\
	Child[1]=TryPersonalShield_MutonCenturionElite, \\
	Child[2]=DoIfFlankedMove, \\
	Child[3]=TryMoveThenGrenade, \\
	Child[4]=TryMoveToSuppressClosest, \\
	Child[5]=TryShootOrReloadOrOverwatch, \\
	Child[6]=HuntEnemyWithCover, \\
	Child[7]=TryBloodCallOnFewTargets, \\
	Child[8]=TryBayonet)

+Behaviors=(BehaviorName=MutonCenElite_RedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=MutonCenElite_RedLastActionSelector)
+Behaviors=(BehaviorName=MutonCenElite_RedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryGrenade, \\
	Child[1]=TryBloodCallOnMultipleTargets, \\
	Child[2]=TrySuppressClosest, \\
	Child[3]=TryShootOrReloadOrOverwatch, \\
	Child[4]=TryBloodCallOnFewTargets, \\
	Child[5]=HuntEnemyWithCover, \\
	Child[6]=TryBayonet, \\
	Child[7]=SelectMove_JobOrAggressive)

; ----------------------------------------------------------------------------------------------------------
; -------------------- MutonM2_LW (Commando) --------------------------------------------------
; ----------------------------------------------------------------------------------------------------------
; "Select Attack if Ideal" includes grenade and melee attack if already in position
+Behaviors=(BehaviorName="MutonCommando::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=MutonCommando_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=MutonCommando_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=MutonCommando_RedAbilitySelector)
+Behaviors=(BehaviorName=MutonCommando_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=MutonCommando_RedFirstAction, Child[2]=MutonCommando_RedLastAction)

+Behaviors=(BehaviorName=MutonCommando_RedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=MutonCommando_RedFirstActionSelector)
+Behaviors=(BehaviorName=MutonCommando_RedFirstActionSelector, NodeType=Selector, \\
	Child[0]=TryMoveThenGrenade, \\
	Child[1]=TryBayonetCharge, \\
	Child[2]=TryBayonetKill, \\
	Child[3]=TryShootOrReloadOrOverwatch, \\
	Child[4]=DoIfFlankedMove, \\
	Child[5]=TryMoveToSuppressClosest, \\
	Child[6]=TryTwoTurnAttackSupportIfSafe, \\
	Child[7]=SelectMoveProfileByJob, \\
	Child[8]=TryBayonet, \\
	Child[9]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=MutonCommando_RedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=MutonCommando_RedLastActionSelector)
+Behaviors=(BehaviorName=MutonCommando_RedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryShootOrReloadOrOverwatch, \\
	Child[1]=TryGrenade, \\
	Child[2]=TrySuppressClosest, \\
	Child[3]=TryBayonet, \\
	Child[4]=SelectMove_JobOrAggressive, \\
	Child[5]=HuntEnemyWithCover)


; ----------------------------------------------------------------------------------------------------------
; -------------------- MutonM2_LW (Legion) --------------------------------------------------
; ----------------------------------------------------------------------------------------------------------
; "Select Attack if Ideal" includes grenade and melee attack if already in position
+Behaviors=(BehaviorName="MutonLegion::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=MutonLegion_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=MutonLegion_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=MutonLegion_RedAbilitySelector)
+Behaviors=(BehaviorName=MutonLegion_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=MutonLegion_RedFirstAction, Child[2]=MutonLegion_RedLastAction)

+Behaviors=(BehaviorName=MutonLegion_RedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=MutonLegion_RedFirstActionSelector)
+Behaviors=(BehaviorName=MutonLegion_RedFirstActionSelector, NodeType=Selector, \\
	Child[0]=TryAimmuton, \\
	Child[1]=TryMoveThenGrenade, \\
	Child[2]=TryBayonetCharge, \\
	Child[3]=SelectMove_JobOrAggressive, \\
	Child[4]=TryShootOrReloadOrOverwatch, \\
	Child[5]=TryBayonetKill, \\
	Child[6]=HuntEnemyWithCover, \\
	Child[7]=TryBayonet, \\
	Child[8]=DoIfFlankedMove)


+Behaviors=(BehaviorName=MutonLegion_RedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=MutonLegion_RedLastActionSelector)
+Behaviors=(BehaviorName=MutonLegion_RedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryGrenade, \\
	Child[1]=TryShootOrReloadOrOverwatch, \\
	Child[2]=TryBayonet, \\
	Child[3]=TryAimmuton, \\
	Child[4]=SelectMove_JobOrAggressive, \\
	Child[5]=HuntEnemyWithCover)
	
	
; ----------------------------------------------------------------------------------------------------------
; -------------------- MutonM2_LW (Centurion) --------------------------------------------------
; ----------------------------------------------------------------------------------------------------------
; "Select Attack if Ideal" includes grenade and melee attack if already in position

; -------------------- MutonM2 --------------------------------------------------
; "Select Attack if Ideal" includes grenade and melee attack if already in position
+Behaviors=(BehaviorName="MutonCenGrunt::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=MutonCenGrunt_RedAlert, Child[3]=GenericAlertHandler)

+Behaviors=(BehaviorName=MutonCenGrunt_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=MutonCenGrunt_RedAbilitySelector)
+Behaviors=(BehaviorName=MutonCenGrunt_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=MutonCenGrunt_RedFirstAction, Child[2]=MutonCenGrunt_RedLastAction)

+Behaviors=(BehaviorName=MutonCenGrunt_RedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=MutonCenGrunt_RedFirstActionSelector)
+Behaviors=(BehaviorName=MutonCenGrunt_RedFirstActionSelector, NodeType=Selector, \\
	Child[0]=TryBayonetCharge, \\
	Child[1]=TryWarCryOnMultipleTargets, \\
	Child[2]=DoIfFlankedMove, \\
	Child[3]=TryMoveThenGrenade, \\
	Child[4]=TryWarCryOnFewTargets, \\
	Child[5]=TryBayonetKill, \\
	Child[6]=TryShootOrReloadOrOverwatch, \\
	Child[7]=TryMoveToSuppressClosest, \\
	Child[8]=TryBayonet, \\
	Child[9]=SelectMoveProfileByJob, \\
	Child[10]=TryTwoTurnAttackSupportIfSafe, \\
	Child[11]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=MutonCenGrunt_RedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=MutonCenGrunt_RedLastActionSelector)
+Behaviors=(BehaviorName=MutonCenGrunt_RedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryWarCryOnMultipleTargets, \\
	Child[1]=TryBayonet, \\
	Child[2]=TryGrenade, \\
	Child[3]=TryWarCryOnFewTargets, \\
	Child[4]=TrySuppressClosest, \\
	Child[5]=TryShootOrReloadOrOverwatch, \\
	Child[6]=HuntEnemyWithCover, \\
	Child[7]=SelectMove_JobOrAggressive) 

; ----------------------------------------------------------------------------------------------------------
; -------------------- MutonM2_LW (Demolisher) --------------------------------------------------
; ----------------------------------------------------------------------------------------------------------
; "Select Attack if Ideal" includes grenade and melee attack if already in position
+Behaviors=(BehaviorName="MutonDemo::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=MutonDemo_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=MutonDemo_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=MutonDemo_RedAbilitySelector)
+Behaviors=(BehaviorName=MutonDemo_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=MutonDemo_RedFirstAction, Child[2]=MutonDemo_RedLastAction)

+Behaviors=(BehaviorName=MutonDemo_RedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=MutonDemo_RedFirstActionSelector)
+Behaviors=(BehaviorName=MutonDemo_RedFirstActionSelector, NodeType=Selector, \\
	Child[0]=TryMoveThenGrenade, \\
	Child[1]=TryShootOrReloadOrOverwatch, \\
	Child[2]=TryMoveToSuppressClosest, \\
	Child[3]=DoIfFlankedMove, \\
	Child[4]=TryBayonet, \\
	Child[5]=SelectMoveProfileByJob, \\
	Child[6]=TryTwoTurnAttackSupportIfSafe, \\
	Child[7]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=MutonDemo_RedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=MutonDemo_RedLastActionSelector)
+Behaviors=(BehaviorName=MutonDemo_RedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryShootOrReloadOrOverwatch, \\
	Child[1]=TryGrenade, \\
	Child[2]=TrySuppressClosest, \\
	Child[3]=TryBayonet, \\
	Child[4]=SelectMove_JobOrAggressive, \\
	Child[5]=HuntEnemyWithCover)
	

; ---------------- Personal Shield (MutonM3_LW, Elite) --------------------------------------------
+Behaviors=(BehaviorName=TryPersonalShield_MutonCenturionElite, NodeType=Sequence, Child[0]=IsAbilityAvailable-Muton115_PersonalShield, Child[1]=SelectAbility-Muton115_PersonalShield)
+Behaviors=(BehaviorName=IsAbilityAvailable-Muton115_PersonalShield, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Muton115_PersonalShield, NodeType=Action)
	
; ----------------Aim Boost --------------------------------------------
+Behaviors=(BehaviorName=TryAimmuton, NodeType=Sequence, Child[0]=IsAbilityAvailable-MutonAimBoost, Child[1]=SelectAbility-MutonAimBoost)
+Behaviors=(BehaviorName=IsAbilityAvailable-MutonAimBoost, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-MutonAimBoost, NodeType=Action)

; *********************************************************************************************************************
; ***                                            Equivalent Abilities                                               ***
; *********************************************************************************************************************
+EquivalentAbilities=( KeyName=BloodCall, EquivalentAbilityName[0]=MutonCommandant_WarCry)

+Behaviors=(BehaviorName=HasValidTarget-BloodCall, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-BloodCall, NodeType=Action)
+Behaviors=(BehaviorName=IsAbilityReady-BloodCall, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityAvailable-BloodCall, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-BloodCall, NodeType=Action)
+Behaviors=(BehaviorName=HasMultipleBloodCallTargets, NodeType=StatCondition, Param[0]=AbilityTargetUnitCount-BloodCall, Param[1]=">=", Param[2]=4) ; Param[2] count includes self.
+Behaviors=(BehaviorName=HasFewBloodCallTargets, NodeType=StatCondition, Param[0]=AbilityTargetUnitCount-BloodCall, Param[1]=">=", Param[2]=2) ; Param[2] count includes self.
+Behaviors=(BehaviorName=IsTargetInMovementRange-BloodCall, NodeType=Condition)

+Behaviors=(BehaviorName=TryBloodCallOnMultipleTargets, NodeType=Sequence, Child[0]=IsAbilityAvailable-BloodCall, Child[1]=HasMultipleBloodCallTargets, Child[2]=SelectAbility-BloodCall)
+Behaviors=(BehaviorName=TryBloodCallOnFewTargets, NodeType=Sequence, Child[0]=IsAbilityAvailable-BloodCall, Child[1]=HasFewBloodCallTargets, Child[2]=SelectAbility-BloodCall)

+Behaviors=(BehaviorName=SelectPotentialTargetForBloodCall, NodeType=Sequence, Child[0]=SetPotentialAllyTargetStack, Child[1]=SelectBestAllyTargetForBloodCall, Child[2]=HasValidTarget-Potential)
+Behaviors=(BehaviorName=SelectBestAllyTargetForBloodCall, NodeType=RepeatUntilFail, Child[0]=EvaluatePotentialBloodCallTarget)
+Behaviors=(BehaviorName=EvaluatePotentialBloodCallTarget, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=ScoreBestTargetForBloodCall, Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=ScoreBestTargetForBloodCall, NodeType=Successor, Child[0]=TargetScoreReachableForBloodCall)
+Behaviors=(BehaviorName=TargetScoreReachableForBloodCall, NodeType=Sequence, Child[0]=IsTargetInMovementRange-BloodCall, Child[1]=AvoidBoundAndPanickedTargets, Child[2]=ScoreByHP)
+Behaviors=(BehaviorName=ScoreByHP, NodeType=Sequence, Child[0]=TargetScoreByScaledMaxStat-eStat_HP, Child[1]=TargetScoreByScaledCurrStat-eStat_HP)
+Behaviors=(BehaviorName=TargetScoreByScaledMaxStat-eStat_HP, NodeType=Action, Param[0]=10)
+Behaviors=(BehaviorName=TargetScoreByScaledCurrStat-eStat_HP, NodeType=Action, Param[0]=1)

; ---------------- BayonetKill (MutonM2_LW, Commando) --------------------------------------------

+Behaviors=(BehaviorName=TryBayonetKill, NodeType=Sequence, Child[0]=IsAbilityReady-Bayonet, Child[1]=TargetIsKillable, Child[2]=BayonetStepSelector)

; ---------------- BayonetCharge (MutonM2_LW, Commando) --------------------------------------------
+EquivalentAbilities=( KeyName=BayonetCharge, EquivalentAbilityName[0]=BayonetCharge)


+Behaviors=(BehaviorName=HasValidTarget-BayonetCharge, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-BayonetCharge, NodeType=Action)
+Behaviors=(BehaviorName=IsAbilityReady-BayonetCharge, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityAvailable-BayonetCharge, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-BayonetCharge, NodeType=Action)
+Behaviors=(BehaviorName=EnoughAlliesVisible, NodeType=StatCondition, Param[0]=VisibleAllyCount, Param[1]=">", Param[2]=1)

; usage
+Behaviors=(BehaviorName=TryBayonetCharge, NodeType=Sequence, Child[0]=IsAbilityReady-BayonetCharge, Child[1]=BayonetChargeConditions, Child[2]=BayonetChargeStepSelector)
+Behaviors=(BehaviorName=BayonetChargeConditions, NodeType=Selector, Child[0]=HasLowHP, Child[1]=EnoughAlliesVisible) ; only used if wounded or more than 3 visible allies 
+Behaviors=(BehaviorName=BayonetChargeStepSelector, NodeType=Selector, Child[0]=BayonetChargeAttack, Child[1]=MoveMeleeDefensiveIfFirstAbility)
+Behaviors=(BehaviorName=BayonetChargeAttack, NodeType=Sequence, Child[0]=IsAbilityAvailable-BayonetCharge, Child[1]=SelectTargetForBayonetCharge, Child[2]=SelectAbility-BayonetCharge)

; targeting
+Behaviors=(BehaviorName=SelectTargetForBayonetCharge, NodeType=Sequence, Child[0]=SetTargetStack-BayonetCharge, Child[1]=SelectBestTargetForStandardMelee, Child[2]=HasValidTarget-BayonetCharge)
+Behaviors=(BehaviorName=SelectBestTargetForBayonetCharge, NodeType=RepeatUntilFail, Child[0]=EvaluatePotentialMeleeTarget)


; ---------------- WarCry (MutonM2, Centurion) --------------------------------------------
+EquivalentAbilities=( KeyName=WarCry, EquivalentAbilityName[0]=Muton115_WarCry)

+Behaviors=(BehaviorName=HasValidTarget-WarCry, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-WarCry, NodeType=Action)
+Behaviors=(BehaviorName=IsAbilityReady-WarCry, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityAvailable-WarCry, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-WarCry, NodeType=Action)
+Behaviors=(BehaviorName=HasMultipleWarCryTargets, NodeType=StatCondition, Param[0]=AbilityTargetUnitCount-WarCry, Param[1]=">=", Param[2]=4) ; Param[2] count includes self.
+Behaviors=(BehaviorName=HasFewWarCryTargets, NodeType=StatCondition, Param[0]=AbilityTargetUnitCount-WarCry, Param[1]=">=", Param[2]=2) ; Param[2] count includes self.
+Behaviors=(BehaviorName=IsTargetInMovementRange-WarCry, NodeType=Condition)

+Behaviors=(BehaviorName=TryWarCryOnMultipleTargets, NodeType=Sequence, Child[0]=IsAbilityAvailable-WarCry, Child[1]=HasMultipleWarCryTargets, Child[2]=SelectAbility-WarCry)
+Behaviors=(BehaviorName=TryWarCryOnFewTargets, NodeType=Sequence, Child[0]=IsAbilityAvailable-WarCry, Child[1]=HasFewWarCryTargets, Child[2]=SelectAbility-WarCry)

+Behaviors=(BehaviorName=SelectPotentialTargetForWarCry, NodeType=Sequence, Child[0]=SetPotentialAllyTargetStack, Child[1]=SelectBestAllyTargetForWarCry, Child[2]=HasValidTarget-Potential)
+Behaviors=(BehaviorName=SelectBestAllyTargetForWarCry, NodeType=RepeatUntilFail, Child[0]=EvaluatePotentialWarCryTarget)
+Behaviors=(BehaviorName=EvaluatePotentialWarCryTarget, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=ScoreBestTargetForWarCry, Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=ScoreBestTargetForWarCry, NodeType=Successor, Child[0]=TargetScoreReachableForWarCry)
+Behaviors=(BehaviorName=TargetScoreReachableForWarCry, NodeType=Sequence, Child[0]=IsTargetInMovementRange-WarCry, Child[1]=AvoidBoundAndPanickedTargets, Child[2]=ScoreByHP)
+Behaviors=(BehaviorName=ScoreByHP, NodeType=Sequence, Child[0]=TargetScoreByScaledMaxStat-eStat_HP, Child[1]=TargetScoreByScaledCurrStat-eStat_HP)
+Behaviors=(BehaviorName=TargetScoreByScaledMaxStat-eStat_HP, NodeType=Action, Param[0]=10)
+Behaviors=(BehaviorName=TargetScoreByScaledCurrStat-eStat_HP, NodeType=Action, Param[0]=1)