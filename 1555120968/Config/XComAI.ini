[XComGame.X2AIBTBehaviorTree]

; ---------------- Personal Shield (MutonM3_LW, Elite) --------------------------------------------
+Behaviors=(BehaviorName=TryPersonalShield_MutonCenturianElite, NodeType=Sequence, Child[0]=IsAbilityAvailable-MutonCenturianElite_PersonalShield, Child[1]=SelectAbility-MutonCenturianElite_PersonalShield)
+Behaviors=(BehaviorName=IsAbilityAvailable-MutonCenturianElite_PersonalShield, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-MutonCenturianElite_PersonalShield, NodeType=Action)

+Behaviors=(BehaviorName=MutonCenturianEliteRoot, NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=MutonCenturianElite_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=MutonCenturianElite_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=MutonCenturianElite_RedAbilitySelector)
+Behaviors=(BehaviorName=MutonCenturianElite_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=MutonCenturianEliteRedFirstAction, Child[2]=MutonCenturianEliteRedLastAction)

+Behaviors=(BehaviorName=MutonCenturianEliteRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=MutonCenturianEliteRedFirstActionSelector)
+Behaviors=(BehaviorName=MutonCenturianEliteRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=TryPersonalShield_MutonCenturianElite, \\
	Child[2]=TryWarCryOnMultipleTargets, \\
	Child[3]=TryMoveThenGrenade, \\
	Child[4]=TryMoveToSuppressClosest, \\
	Child[5]=TryShootOrReloadOrOverwatch, \\
	Child[6]=HuntEnemyWithCover, \\
	Child[7]=TryWarCryOnFewTargets, \\
	Child[8]=TryBayonet)

+Behaviors=(BehaviorName=MutonCenturianEliteRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=MutonCenturianEliteRedLastActionSelector)
+Behaviors=(BehaviorName=MutonCenturianEliteRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryGrenade, \\
	Child[1]=TryWarCryOnMultipleTargets, \\
	Child[2]=TrySuppressClosest, \\
	Child[3]=TryShootOrReloadOrOverwatch, \\
	Child[4]=TryWarCryOnFewTargets, \\
	Child[5]=HuntEnemyWithCover, \\
	Child[6]=TryBayonet, \\
	Child[7]=SelectMove_JobOrAggressive)
	
; ---------------- WarCry (MutonM3_LW, Elite) --------------------------------------------
+Behaviors=(BehaviorName=HasValidTarget-WarCry, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-WarCry, NodeType=Action)
+Behaviors=(BehaviorName=IsAbilityReady-WarCry, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityAvailable-WarCry, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-WarCry, NodeType=Action)
+Behaviors=(BehaviorName=HasMultipleWarCryTargets, NodeType=StatCondition, Param[0]=AbilityTargetUnitCount-WarCry, Param[1]=">=", Param[2]=3) ; Param[2] count includes self.
+Behaviors=(BehaviorName=HasFewWarCryTargets, NodeType=StatCondition, Param[0]=AbilityTargetUnitCount-WarCry, Param[1]=">=", Param[2]=2) ; Param[2] count includes self.
+Behaviors=(BehaviorName=IsTargetInMovementRange-WarCry, NodeType=Condition)

+Behaviors=(BehaviorName=TryWarCryOnMultipleTargets, NodeType=Sequence, Child[0]=IsAbilityAvailable-WarCry, Child[1]=HasMultipleWarCryTargets, Child[2]=SelectAbility-WarCry)
+Behaviors=(BehaviorName=TryWarCryOnFewTargets, NodeType=Sequence, Child[0]=IsAbilityAvailable-WarCry, Child[1]=HasFewWarCryTargets, Child[2]=SelectAbility-WarCry)

+Behaviors=(BehaviorName=SelectPotentialTargetForWarCry, NodeType=Sequence, Child[0]=SetPotentialAllyTargetStack, Child[1]=SelectBestAllyTargetForWarCry, Child[2]=HasValidTarget-Potential)
+Behaviors=(BehaviorName=SelectBestAllyTargetForWarCry, NodeType=RepeatUntilFail, Child[0]=EvaluatePotentialWarCryTarget)
+Behaviors=(BehaviorName=EvaluatePotentialWarCryTarget, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=ScoreBestTargetForWarCry, Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=ScoreBestTargetForWarCry, NodeType=Successor, Child[0]=TargetScoreReachableForWarCry)
+Behaviors=(BehaviorName=TargetScoreReachableForWarCry, NodeType=Sequence, Child[0]=IsTargetInMovementRange-WarCry, Child[1]=AvoidBoundAndPanickedTargets, Child[2]=ScoreByHP)
+Behaviors=(BehaviorName=ScoreByHP, NodeType=Sequence, Child[0]=TargetScoreByScaledMaxStat-eStat_HP, Child[1]=TargetScoreByScaledCurrStat-eStat_HP)
+Behaviors=(BehaviorName=TargetScoreByScaledMaxStat-eStat_HP, NodeType=Action, Param[0]=10)
+Behaviors=(BehaviorName=TargetScoreByScaledCurrStat-eStat_HP, NodeType=Action, Param[0]=1)


; ----------------------------------------------------------------------------------------------------------
; -------------------- MutonM2_LW (Centurion) --------------------------------------------------
; ----------------------------------------------------------------------------------------------------------
; "Select Attack if Ideal" includes grenade and melee attack if already in position
+Behaviors=(BehaviorName="MutonCommando_Root", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=MutonCommando_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=MutonCommando_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=MutonCommando_RedAbilitySelector)
+Behaviors=(BehaviorName=MutonCommando_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=MutonCommando_RedFirstAction, Child[2]=MutonCommando_RedLastAction)

+Behaviors=(BehaviorName=MutonCommando_RedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=MutonCommando_RedFirstActionSelector)
+Behaviors=(BehaviorName=MutonCommando_RedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=TryBayonetCharge, \\
	Child[2]=TryMoveThenGrenade, \\
	Child[3]=TryShootOrReloadOrOverwatch, \\
	Child[4]=TryBayonetKill, \\
	Child[5]=TryMoveToSuppressClosest, \\
	Child[6]=TryTwoTurnAttackSupportIfSafe, \\
	Child[7]=SelectMoveProfileByJob, \\
	Child[8]=TryBayonet, \\
	Child[9]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=MutonCommando_RedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=MutonCommando_RedLastActionSelector)
+Behaviors=(BehaviorName=MutonCommando_RedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryShootOrReloadOrOverwatch, \\
	Child[1]=TryGrenade, \\
	Child[2]=TrySuppressClosest, \\
	Child[3]=TryBayonet, \\
	Child[4]=SelectMove_JobOrAggressive, \\
	Child[5]=HuntEnemyWithCover)


; ---------------- BayonetKill (MutonM2_LW, Centurion) --------------------------------------------

+Behaviors=(BehaviorName=TryBayonetKill, NodeType=Sequence, Child[0]=IsAbilityReady-Bayonet, Child[1]=TargetIsKillable, Child[2]=BayonetStepSelector)

; ---------------- BayonetCharge (MutonM2_LW, Centurion) --------------------------------------------
+Behaviors=(BehaviorName=HasValidTarget-BayonetCharge, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-BayonetCharge, NodeType=Action)
+Behaviors=(BehaviorName=IsAbilityReady-BayonetCharge, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityAvailable-BayonetCharge, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-BayonetCharge, NodeType=Action)
+Behaviors=(BehaviorName=EnoughAlliesVisible, NodeType=StatCondition, Param[0]=VisibleAllyCount, Param[1]=">", Param[2]=1)

; usage
+Behaviors=(BehaviorName=TryBayonetCharge, NodeType=Sequence, Child[0]=IsAbilityReady-BayonetCharge, Child[1]=BayonetChargeConditions, Child[2]=BayonetChargeStepSelector)
+Behaviors=(BehaviorName=BayonetChargeConditions, NodeType=Selector, Child[0]=HasLowHP, Child[1]=EnoughAlliesVisible) ; only used if wounded or more than 3 visible allies 
+Behaviors=(BehaviorName=BayonetChargeStepSelector, NodeType=Selector, Child[0]=BayonetChargeAttack, Child[1]=MoveMeleeDefensiveIfFirstAbility)
+Behaviors=(BehaviorName=BayonetChargeAttack, NodeType=Sequence, Child[0]=IsAbilityAvailable-BayonetCharge, Child[1]=SelectTargetForBayonetCharge, Child[2]=SelectAbility-BayonetCharge)

; targeting
+Behaviors=(BehaviorName=SelectTargetForBayonetCharge, NodeType=Sequence, Child[0]=SetTargetStack-BayonetCharge, Child[1]=SelectBestTargetForStandardMelee, Child[2]=HasValidTarget-BayonetCharge)
+Behaviors=(BehaviorName=SelectBestTargetForBayonetCharge, NodeType=RepeatUntilFail, Child[0]=EvaluatePotentialMeleeTarget)
