[AbilityEditor.OPTC_Abilities]
; AbilityName - String
; Required - Name of the ability being modified

; Cooldown - Integer
; Optional - Number of turns between two uses

; APCost - Integer
; Optional - Number of action it will take

; EndsTurn - Bool
; Optional - Should this ability end your turn?

; FreeAction - Bool
; Optional - Should this ability cost an action?

; FocusAmount - Integer
; Optional - Number of focus it will take

; ConsumeAllFocus - Bool
; Optional - Should this ability require all you focus?

; GhostOnlyCost - Bool
; Optional - Should this ability cost focus for Ghost only?

; DoNotConsumeAllActionsWith - Array (string)
; Optional - If the ability owner has any of these abilities, the ability will not consume all points if EndsTurn was set to true. (e.g. Salvo)

; AmmoCost - Integer
; Optional - Number of ammo needed (e.g. HailOfBullets:3, ThrowGrenade:1 etc..)

; Charges - Integer
; Optional - Number of usage granted

; KeepChargeOnMiss - Bool
; Optional - Recover your charge if the ability misses (e.g. Domination)

; ConsumeItem - Bool
; Optional - Will consume the item granting this ability.

; SharedAbilityCharges - Array (string)
; Optional - Abilities which should all have their charges deducted as well (e.g. Skulljack & Skullmine).

; AddAbility - Array (string)
; Optional - When a unit is granted this ability, it will be granted all of these abilities as well.

; OverrideAbilities - Array (string)
; Optional - Getting one of those abilities will override the original ability.

; PrerequisiteAbilities - Array (string)
; Optional - Ability required to unlock current ability.

; BonusChargeWith - Array
; BonusAbilityName - String - Name of the ability granting extra charges.
; NumBonusCharges - Integer - Number of bonus charge to add.
; Optional - Abilities which should grant extra charges.

; SharedCooldowns - Array
; AbilityName - String - Name of the ability getting a cooldown.
; NumTurns - Integer - Number of turns before use.
; Optional - Abilities which will get a cooldown.

; ItemSlot - String
; Optional - For abilities that require an item but are not sourced from one, specifies a default slot to use.
; Accepted values:
; Unknown
; PrimaryWeapon
; SecondaryWeapon
; HeavyWeapon

; RetainConcealment - String
; Optional - Determine if the unit can remain concealed after the ability is activated
; Accepted values:
; NonOffensive - Always retain Concealment if the Hostility != Offensive (default behavior)
; Always - Always retain Concealment, period
; Never - Never retain Concealment, period
; KillShot - Retain concealment when killing a single (primary) target
; Miss - Retain concealment when the ability misses
; MissOrKillShot - Retain concealment when the ability misses or when killing a single (primary) target
; AlwaysEvenWithObjective - Always retain Concealment, even if the target is an objective

; Examples:

; This will allow Ranger to have an action after Slash
;+Abilities = (AbilityName=SwordSlice, APCost=1, EndsTurn=true, DoNotConsumeAllActionsWith[0]=Blademaster)

; Gives 9 charges of Scanning Protocol, is a free action and can be used every two turns
;+Abilities = (AbilityName=ScanningProtocol, Cooldown=2, Charges=9, FreeAction=true)

; Restoration grants 3 extra charges of Heals
;+Abilities = (AbilityName=GremlinHeal, Charges=2, BonusChargeWith[0]=(BonusAbilityName=RestorativeMist, NumBonusCharges=3) )

; Grapple may be used every turn, only costs one action point, and does not end turn
; inspired by [WotC] RW Realistic Grappling
+Abilities = (AbilityName=SkirmisherGrapple, Cooldown=1, APCost=1, EndsTurn=False)

; Apply Remote Start Purifiers to Advent Purifier Revamp
+Abilities = (AbilityName=PurifierImmunities, AddAbility[0]=PurifierRemoteStartExplosion)

; Modify Skirmisher Strike (Marauder) inspired by the Skirmisher Ripjack Slash mod
+Abilities = (AbilityName=SkirmisherStrike, APCost=1, EndsTurn=True, DoNotConsumeAllActionsWith[0]=Reckoning)

; replace Domination charges with cooldown
+Abilities = (AbilityName=Domination, Cooldown=6, APCost=1, EndsTurn=True)
